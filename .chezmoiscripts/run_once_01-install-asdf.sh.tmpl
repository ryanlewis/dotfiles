#!/bin/bash
# Install asdf version manager - runs once
set -e

ASDF_VERSION="0.18.0"

# Skip if asdf is already installed and working
{{ if eq .chezmoi.os "darwin" -}}
# Check for Homebrew installation
if command -v asdf &> /dev/null; then
    CURRENT_VERSION=$(asdf --version 2>/dev/null | cut -d' ' -f2 | sed 's/^v//')
    echo "‚úì asdf v$CURRENT_VERSION already installed via Homebrew"
    exit 0
fi
{{ else -}}
if [[ -f "$HOME/.asdf/asdf.sh" ]]; then
    . "$HOME/.asdf/asdf.sh"
    if command -v asdf &> /dev/null; then
        CURRENT_VERSION=$(asdf --version 2>/dev/null | cut -d' ' -f2 | sed 's/^v//')
        if [[ "$CURRENT_VERSION" == "$ASDF_VERSION" ]]; then
            echo "‚úì asdf v$ASDF_VERSION already installed"
            exit 0
        fi
        echo "üîÑ Upgrading asdf from v$CURRENT_VERSION to v$ASDF_VERSION..."
        rm -rf "$HOME/.asdf"
    fi
fi
{{ end -}}

echo "üîß Installing asdf v$ASDF_VERSION..."

# Install dependencies for building languages
{{ if eq .chezmoi.os "darwin" -}}
# macOS - use Homebrew
if command -v brew &> /dev/null; then
    echo "üì¶ Installing asdf via Homebrew..."
    brew install asdf
else
    echo "‚ùå Homebrew not found. Please install Homebrew first."
    exit 1
fi
{{ else if eq .chezmoi.os "linux" -}}
# Linux - install via git clone (standard method)
echo "üì• Installing asdf via git..."

# Clone asdf repository
git clone https://github.com/asdf-vm/asdf.git "$HOME/.asdf" --branch v${ASDF_VERSION}

# Install build dependencies for languages
if command -v apt &> /dev/null; then
    echo "üì¶ Installing build dependencies..."
    sudo apt-get update -qq
    sudo apt-get install -y -qq \
        curl git build-essential libssl-dev zlib1g-dev \
        libbz2-dev libreadline-dev libsqlite3-dev wget unzip llvm libncurses5-dev \
        libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python3-openssl
elif command -v dnf &> /dev/null; then
    sudo dnf groupinstall -y "Development Tools"
    sudo dnf install -y curl git openssl-devel zlib-devel bzip2-devel \
        readline-devel sqlite-devel wget unzip llvm ncurses-devel
elif command -v pacman &> /dev/null; then
    sudo pacman -S --noconfirm base-devel curl git
fi
{{ end -}}

# Source asdf to make it available immediately
export ASDF_DATA_DIR="${ASDF_DATA_DIR:-$HOME/.asdf}"
{{ if eq .chezmoi.os "darwin" -}}
# On macOS with Homebrew, asdf is installed to /opt/homebrew
if [[ -f "/opt/homebrew/opt/asdf/libexec/asdf.sh" ]]; then
    . "/opt/homebrew/opt/asdf/libexec/asdf.sh"
elif [[ -f "/usr/local/opt/asdf/libexec/asdf.sh" ]]; then
    . "/usr/local/opt/asdf/libexec/asdf.sh"
else
    echo "‚ö†Ô∏è  Warning: Could not find asdf.sh after Homebrew installation"
fi
{{ else -}}
. "$HOME/.asdf/asdf.sh"
{{ end -}}

# Reshim if this is an upgrade
if [[ -d "$ASDF_DATA_DIR/installs" ]]; then
    echo "üîÑ Regenerating shims..."
    asdf reshim || true
fi

echo "‚úì asdf v$ASDF_VERSION installed successfully"
echo ""
echo "üìù Note: asdf v0.16+ requires manual updates via package manager or downloading new binaries"
echo "   No more 'asdf update' command available"